package gui;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import controller.ToolCtrl;

import java.awt.*;

public class TimKiemPhieuDatHang_GUI extends JPanel {
	private JTable tblPhieuDatThuoc;
	private JTextField txtKhachHang, txtTenNV;
	private JComboBox<String> cmbTrangThai;
	private JButton btnTimKiem, btnChiTiet, btnLamMoi;
	private TrangChuQL_GUI mainFrame;
	Font font1 = new Font("Arial", Font.BOLD, 18);
	Font font2 = new Font("Arial", Font.PLAIN, 15);
	public ToolCtrl tool = new ToolCtrl();

	public TimKiemPhieuDatHang_GUI(TrangChuQL_GUI mainFrame) {
        this.mainFrame = mainFrame;
        initUI();
    }

	public void initUI() {
		setLayout(new BorderLayout());
		setPreferredSize(new Dimension(1058, 509));
		setBackground(Color.WHITE);

		// ======== TOP PANEL ========
		JPanel topPanel = new JPanel();
		topPanel.setLayout(new BoxLayout(topPanel, BoxLayout.Y_AXIS));
		topPanel.setBackground(Color.WHITE);
		topPanel.setBorder(new EmptyBorder(10, 10, 10, 10));
		add(topPanel, BorderLayout.NORTH);

		// Ti√™u ƒë·ªÅ
		JLabel lblTitle = new JLabel("DANH S√ÅCH PHI·∫æU ƒê·∫∂T THU·ªêC", SwingConstants.CENTER);
		lblTitle.setFont(font1);
		lblTitle.setAlignmentX(Component.CENTER_ALIGNMENT); // üî• Gi√∫p cƒÉn gi·ªØa khi d√πng BoxLayout
		topPanel.add(lblTitle);

		// ====== H√†ng t√¨m ki·∫øm ======
		JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 30, 10));
		searchPanel.setBackground(Color.WHITE);

		JLabel lblKH = tool.taoLabel("T√™n kh√°ch h√†ng: ");
		txtKhachHang = tool.taoTextField("T√™n kh√°ch h√†ng...");

		JLabel lblNV = tool.taoLabel("T√™n nh√¢n vi√™n:");
		txtTenNV = tool.taoTextField("T√™n nh√¢n vi√™n...");

		btnTimKiem = tool.taoButton("T√¨m ki·∫øm", "/picture/hoaDon/search.png");
		
		searchPanel.add(lblKH);
		searchPanel.add(txtKhachHang);
		searchPanel.add(lblNV);
		searchPanel.add(txtTenNV);
		searchPanel.add(btnTimKiem);

		// ====== H√†ng tr·∫°ng th√°i & n√∫t ch·ª©c nƒÉng ======
		JPanel functionPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 60, 10));
		functionPanel.setBackground(Color.WHITE);

		JLabel lblTrangThai = tool.taoLabel("Tr·∫°ng th√°i:");
		cmbTrangThai = cmbTrangThai = cmbTrangThai = tool.taoComboBox(new String[] {"T·∫•t c·∫£", "Ch·ªù h√†ng", "ƒê√£ giao", "ƒê√£ h·ªßy"});
		cmbTrangThai.setPreferredSize(new Dimension(140, 26));

		btnChiTiet = tool.taoButton("Xem chi ti·∫øt", "/picture/hoaDon/xemChiTiet.png");
		btnLamMoi = tool.taoButton("L√†m m·ªõi", "/picture/hoaDon/refresh.png");

		functionPanel.add(lblTrangThai);
		functionPanel.add(cmbTrangThai);
		functionPanel.add(btnChiTiet);
		functionPanel.add(btnLamMoi);

		// ====== Panel tr√™n c√πng (Top) ======
		topPanel.setLayout(new BoxLayout(topPanel, BoxLayout.Y_AXIS));
		topPanel.setBackground(Color.WHITE);
		topPanel.add(lblTitle);
		topPanel.add(searchPanel);
		topPanel.add(functionPanel);

		add(topPanel, BorderLayout.NORTH);
		
		// ======== CENTER TABLE ========
		String[] columnNames = { "STT", "M√£ phi·∫øu", "T√™n nh√¢n vi√™n", "T√™n kh√°ch h√†ng", "Ng√†y ƒë·∫∑t", "Ng√†y h·∫πn",
		"Tr·∫°ng th√°i" };
		DefaultTableModel model = new DefaultTableModel(columnNames, 0);
		tblPhieuDatThuoc = new JTable(model);
		tblPhieuDatThuoc.setRowHeight(28);
		tblPhieuDatThuoc.getTableHeader().setFont(font2);
		tblPhieuDatThuoc.setFont(font2);

		// ƒê·∫∑t n·ªÅn tr·∫Øng cho b·∫£ng
		tblPhieuDatThuoc.setBackground(Color.WHITE);

		// ƒê·∫∑t n·ªÅn tr·∫Øng cho v√πng header v√† v√πng ch·ª©a
		tblPhieuDatThuoc.getTableHeader().setBackground(new Color(240, 240, 240)); // x√°m r·∫•t nh·∫°t
		tblPhieuDatThuoc.setGridColor(new Color(200, 200, 200)); // M√†u ƒë∆∞·ªùng k·∫ª √¥ (nh·∫π)
		tblPhieuDatThuoc.setShowGrid(true); // B·∫≠t hi·ªÉn th·ªã ƒë∆∞·ªùng k·∫ª

		// Vi·ªÅn cho b·∫£ng
		tblPhieuDatThuoc.setBorder(BorderFactory.createLineBorder(new Color(180, 180, 180)));

		// N·ªÅn c·ªßa JScrollPane (bao quanh b·∫£ng)
		JScrollPane scrollPane = new JScrollPane(tblPhieuDatThuoc);
		scrollPane.getViewport().setBackground(Color.WHITE); // n·ªÅn v√πng ch·ª©a b·∫£ng

		// CƒÉn gi·ªØa n·ªôi dung c√°c √¥
		DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
		centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
		for (int i = 0; i < tblPhieuDatThuoc.getColumnCount(); i++) {
			tblPhieuDatThuoc.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
		}

		// CƒÉn gi·ªØa ti√™u ƒë·ªÅ c·ªôt
		JTableHeader header = tblPhieuDatThuoc.getTableHeader();
		header.setBackground(new Color(240, 240, 240));
		header.setFont(font2);
		((DefaultTableCellRenderer) header.getDefaultRenderer())
		        .setHorizontalAlignment(SwingConstants.CENTER);

		add(scrollPane, BorderLayout.CENTER);
		
		btnChiTiet.addActionListener(e -> {
		    ChiTietPhieuDatHang_GUI chiTietPanel = new ChiTietPhieuDatHang_GUI(mainFrame);
		    mainFrame.setUpNoiDung(chiTietPanel);
		});
	}
}
